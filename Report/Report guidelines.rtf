{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Calibri-BoldItalic;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Calibri;
\f3\fnil\fcharset0 Calibri-Bold;\f4\fnil\fcharset0 Calibri-Italic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f0\i\b\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
Produce a Short Printed Report. 
\f1\i0\b0\fs24 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f2\fs29\fsmilli14667 \cf2 Each team should produce a short 
\f3\b printed 
\f2\b0 report to accompany their game. The main body of the report should include the following sections. 
\f1\fs24 \

\f2\fs29\fsmilli14667 A 
\f0\i\b Requirements Analysis 
\f2\i0\b0 section, comprising Use Case Descriptions and an accompanying a UML Use Case Diagram (or Diagrams). The Descriptions and Diagram(s) should concentrate on the 
\f4\i main 
\f2\i0 sets of sequences of actions that will be realised by the system. Plan your game\'92s behaviour so that it can cope if problems arise (e.g. what happens if two players enter the same name?), and in such circumstances make sure you have an appropriate alternative flow or an extending use case. In your Requirements Analysis, include your guide to the virtual \'91board\'92 on which your game is played (remember: this graphical representation is for guidance only; it will NOT be implemented as a GUI in this text-only system!) (
\f3\b 15 
\f2\b0 marks) 
\f1\fs24 \

\f2\fs29\fsmilli14667 A 
\f0\i\b Realisation 
\f2\i0\b0 section, comprising one or more UML Sequence Diagrams with a brief written commentary. The sequence diagram(s) show(s) how your software components make method calls to each other, and interact with the players, in order to realise the behaviour of the main use cases described in the previous section. (
\f3\b 15 
\f2\b0 marks) 
\f1\fs24 \

\f2\fs29\fsmilli14667 A 
\f0\i\b Design 
\f2\i0\b0 section, comprising a UML Class Diagram, that describes the system components. The class diagram will correspond closely to the coded implementation of the game; it should show classes and methods that support the sequences of method calls described in the previous section. Again, provide a brief written commentary on your design, pointing out any instances of good design where you have considered questions of 
\f4\i maintainability 
\f2\i0 and 
\f4\i extensibility
\f2\i0 . (
\f3\b 15 
\f2\b0 marks) 
\f1\fs24 \

\f4\i\fs29\fsmilli14667 Adherence to 
\f0\b Process 
\f4\b0 should 
\f2\i0 be documented in appendices. Place a 
\f0\i\b Test Plan 
\f2\i0\b0 for the implemented system (including details of any Junit tests that were performed) in Appendix I. A set of set of weekly 
\f0\i\b Team Minutes 
\f2\i0\b0 should be placed in Appendix II. (
\f3\b 5 
\f2\b0 marks) 
\f1\fs24 \

\f2\fs29\fsmilli14667 The main body of the report (excluding appendices) should not exceed 
\f3\b 20 pages
\f2\b0 . Individual team members should place their initials (e.g. [A.B.; C.D.]) next to the sections for which they were the principal authors. 
\f1\fs24 \
}